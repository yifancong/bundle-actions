var t,e=require("@actions/core"),o=require("@actions/github"),a=(t=require("size-plugin-core"))&&"object"==typeof t&&"default"in t?t.default:t,r=require("@actions/artifact");(async()=>{const t=e.getInput("repo-token"),n=o.getOctokit(t);await async function(t,o,n){try{const n=new a({compression:e.getInput("compression"),pattern:e.getInput("pattern")||"**/dist/**/*.{js,mjs,cjs}",exclude:e.getInput("exclude")||"{**/*.map,**/node_modules/**}"}),i=await n.readFromDisk(process.cwd()),{repository:s}=o,c=await t.rest.actions.listWorkflowRuns({owner:s.owner.login,repo:s.name,branch:e.getInput("branch")||o.ref.replace("refs/heads/",""),status:"completed",per_page:1});let u=i;if(c.data.total_count>0){const e=r.create(),{data:o}=await t.rest.actions.listWorkflowRunArtifacts({owner:s.owner.login,repo:s.name,run_id:c.data.workflow_runs[0].id});if(o.total_count>0){const t=await e.downloadArtifact(o.artifacts[0].id);u=JSON.parse(t.toString())}}const p=await n.getDiff(u,i),l=await n.printSizes(p);console.log("Size Differences:"),console.log(l);const f=r.create();await f.uploadArtifact("size-snapshot",[Buffer.from(JSON.stringify(i))],process.cwd(),{continueOnError:!1})}catch(t){e.setFailed(t.message)}}(n,o.context)})();
